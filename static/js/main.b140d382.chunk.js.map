{"version":3,"sources":["Components/Card.js","Components/Cardlist.js","Components/Scroll.js","Components/SearchBox.js","App.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","Cardlist","robots","cardcomponent","map","user","i","Scroll","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","Onsearch","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAwBeA,EArBF,SAACC,GAAW,IACjBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GAEnB,OAEC,sBAAKC,UAAY,mDAAjB,UAEA,qBAAKC,IAAM,QAAQC,IAAG,+BAA4BH,EAA5B,cACrB,gCAEC,6BAAMF,IAEN,4BAAKC,WCSKK,EApBE,SAAC,GAEjB,IAFmBC,EAEpB,EAFoBA,OAGdC,EAAgBD,EAAOE,KAAK,SAACC,EAAMC,GAEvC,OAAQ,cAAC,EAAD,CAERT,GAAMK,EAAOI,GAAGT,GAChBF,KAAQO,EAAOI,GAAGX,KAClBC,MAASM,EAAOI,GAAGV,OAHZU,MAOR,OACE,8BACEH,KCAUI,EAbA,SAACb,GAGf,OAEE,qBAAKc,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SAECjB,EAAMkB,YCOKC,G,MAlBG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OAEC,qBAAKjB,UAAY,MAAjB,SAEA,uBACAA,UAAY,mCACZkB,KAAO,SACPC,YAAc,mBAGdC,SAAYH,QCwDCI,E,kDA1Dd,aAAe,IAAD,8BACb,gBAoBFC,SAAW,SAACC,GAEX,EAAKC,SAAS,CAACR,YAAaO,EAAME,OAAOC,SApBxC,EAAKC,MACL,CAECvB,OAAQ,GACRY,YAAa,IAPD,E,qDAYf,WAAqB,IAAD,OAEnBY,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OACV,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAUxB,WACC,IAAD,SACiCC,KAAKN,MAE/BO,GAHP,EACS9B,OADT,EACiBY,YAEMiB,KAAKN,MAAMvB,OAAO+B,QAAO,SAAA/B,GAE7C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMX,YAAYoB,mBAIrE,OAAiC,IAA7BH,KAAKN,MAAMvB,OAAOkC,OACd,oBAAItC,UAAY,QAAhB,0BAKJ,sBAAKA,UAAY,KAAjB,UACC,oBAAIA,UAAY,KAAhB,gCAEA,cAAC,EAAD,CAAWiB,aAAgBgB,KAAKX,WAE9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,a,GAnDTK,a,MCKlBC,IAASC,OAER,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.b140d382.chunk.js","sourcesContent":["import React from 'react';\r\nimport Cardlist from './Cardlist'\r\n\r\nconst Card = (props) => {\r\n\tconst {name, email, id} = props;\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className = 'tc bg-light-green dib br3 ma2 grow bw2 shadow-5 '>\r\n\t\t\t\r\n\t\t\t<img alt = \"Robot\" src = {`https://robohash.org/${id}?220*220`} />\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<h2>{ name }</h2>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<p>{ email }</p>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport robots from './robots';\r\n\r\nconst Cardlist = ({ robots }) => \r\n\r\n{\r\nconst cardcomponent = robots.map( (user, i) => \r\n\t{\r\n\t\treturn (<Card \r\n\t\tkey = {i} \r\n\t\tid = {robots[i].id} \r\n\t\tname = {robots[i].name} \r\n\t\temail = {robots[i].email} />\r\n\t\t);\r\n\t}\r\n)\r\n\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{cardcomponent}\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Cardlist;\r\n","import React from'react';\r\n\r\n/*props\r\nstate\r\nchildren*/\r\n\r\nconst Scroll = (props) => \r\n\r\n{\r\n\treturn (\r\n\r\n\t\t\t<div style = {{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t\r\n\t\t\t{props.children}\t\r\n\t\t\t\r\n\t\t\t</div>\t\t\r\n\t);\r\n\t\t\t\t\r\n};\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\r\n\t\t<div className = 'pa2'>\r\n\t\t\r\n\t\t<input \r\n\t\tclassName = 'pa3 ba b-green bg-lightest-blue '\r\n\t\ttype = 'search' \r\n\t\tplaceholder = 'Search Robo Name' \r\n\r\n\r\n\t\tonChange = {searchChange}\r\n\t\t\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component} from 'react';\r\nimport Cardlist from './Components/Cardlist';\r\nimport Scroll from './Components/Scroll';\r\nimport { robots } from './Components/robots';\r\nimport './Containers/App.css';\r\nimport SearchBox from './Components/SearchBox';\r\n\r\n/*STATE >> props*/\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\r\n\t\tthis.state = \r\n\t\t{\r\n\t\t\t/*robots: robots,*/\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidMount() {\r\n\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then( response => response.json() )\r\n\t.then(users => \r\n\t\tthis.setState({robots: users}));\r\n\r\n}\r\n\r\nOnsearch = (event) =>\r\n{\r\n\tthis.setState({searchfield: event.target.value})\r\n\r\n}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\t\r\n\t\tconst filteredRobots =this.state.robots.filter(robots =>  \r\n\t\t\t{\r\n\t\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t\t}\r\n\t\t)  \r\n\r\nif (this.state.robots.length === 0) {\r\n\treturn <h2 className = \"f1 tc\"> Loading... </h2>\r\n}\r\nelse\r\n{ \r\n\treturn (\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1 className = 'f2'> Welcome To React </h1>\r\n\r\n\t\t\t\t\t<SearchBox searchChange = {this.Onsearch}/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t\t\t<Cardlist robots={filteredRobots}/>\r\n\t\t\t\t\t\t\t</Scroll>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Card from './Components/Card';\nimport Cardlist from './Components/Cardlist';\nimport 'tachyons';\nimport { robots } from './Components/robots';\n\n\n/*ReactDOM.render(<Hello greeting = {'Welcome ' + 'React Learner'} />,\n\tdocument.getElementById('root')\n);*/\n\nReactDOM.render\n(\n\t<App/>\n\t,document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  \n/*reportWebVitals();*/"],"sourceRoot":""}